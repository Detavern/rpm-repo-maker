- name: Check if target OS is CentOS
  hosts: centos
  tasks:
    - name: Ping hosts
      ansible.builtin.ping:
    - name: Create group of verified distribution
      ansible.builtin.group_by:
        key: verified_{{ ansible_distribution | lower }}
- name: Make CentOS Yum offline repository
  hosts: verified_centos
  vars_prompt:
    - name: repository
      prompt: What is your offline repository name?
      private: false
  vars:
    repository_suffix: "{{ ansible_distribution }}-{{ ansible_distribution_version }}-{{ ansible_machine }}"
    repository_file: "{{ repository }}.{{ repository_suffix }}.tar.gz"
    repository_local: repository
  tasks:
    - name: Put yum repository maker
      ansible.builtin.copy:
        src: yum_repo_maker
        dest: ~/
    - name: Put configuration file
      ansible.builtin.copy:
        src: package.json
        dest: ~/
    - name: Execute maker
      ansible.builtin.shell:
        cmd: python -m yum_repo_maker generate {{ repository }} -c package.json -u {{ repository_suffix }}
        chdir: ~/
      register: maker_sleeper
      async: 1800
      poll: 0
    - name: Wait for maker job to end
      ansible.builtin.async_status:
        jid: "{{ maker_sleeper.ansible_job_id }}"
      register: maker_result
      until: maker_result.finished
      retries: 360
      delay: 10
    - name: Clean up async file
      ansible.builtin.async_status:
        jid: "{{ maker_sleeper.ansible_job_id }}"
        mode: cleanup
    - name: Echo result
      ansible.builtin.debug:
        var: maker_result.stdout_lines
    - name: Download archived repository file
      ansible.builtin.fetch:
        src: ~/{{ repository_file }}
        dest: "{{ repository_local }}/"
        flat: true
    - name: Echo file
      ansible.builtin.debug:
        var: repository_file
